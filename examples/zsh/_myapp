#compdef myapp

_myapp() {
    local program=myapp
    typeset -A opt_args
    local curcontext="$curcontext" state line context


        # ---- Command: 
        _arguments -s  \
            '1: :->cmd1' \
            '*: :->args' \
            '(--verbose -v)'{--verbose,-v}'[]' \
            '(--help -h)'{--help,-h}'[Show command help]' \
            && ret=0


        case $state in
        cmd1)
            _alternative 'args:cmd2:((_complete\:"Generate self completion" cook\:"Cook something" help\:"Show command help" weather\:"Weather"))'
        ;;
        args)
            case $line[1] in
            _complete)

                # ---- Command: _complete
                _arguments -s -C \
                    '1: :->cmd1' \
                    '2: :->cmd2' \
                    '*: :->args' \
                    '--name[name of the program]:name' \
                    && ret=0


                case $state in
                cmd2)
                    _alternative 'args:cmd3:((bash\:"for bash" zsh\:"for zsh"))'
                ;;
                args)
                    case $line[2] in
                    bash)

                        # ---- Command: _complete bash
                        _arguments -s -C \
                            '1: :->cmd1' \
                            '2: :->cmd2' \
                            '*: :->args' \
                            '--without-description[generate without description]' \
                            && ret=0


                    ;;
                    zsh)

                        # ---- Command: _complete zsh
                        _arguments -s -C \
                            '1: :->cmd1' \
                            '2: :->cmd2' \
                            '*: :->args' \
                            && ret=0


                    ;;
                    esac

                ;;
                esac
            ;;
            cook)

                # ---- Command: cook
                _arguments -s -C \
                    '1: :->cmd1' \
                    '2: :->drink' \
                    '*: :->args' \
                    '--with[Drink with ...]:with:("almond milk" "soy milk" "oat milk" "spelt milk" "cow milk")' \
                    '(--sugar -s)'{--sugar,-s}'[add sugar]' \
                    && ret=0

            case $state in
                drink)
                    compadd -X 'drink:' 'tea' 'coffee'
                ;;
            esac

            ;;
            help)

                # ---- Command: help
                _arguments -s -C \
                    '1: :->cmd1' \
                    '2: :->cmd2' \
                    '*: :->args' \
                    '--all[]' \
                    && ret=0


                case $state in
                cmd2)
                    _alternative 'args:cmd3:((_complete cook weather))'
                ;;
                args)
                    case $line[2] in
                    _complete)

                        # ---- Command: help _complete
                        _arguments -s -C \
                            '1: :->cmd1' \
                            '2: :->cmd2' \
                            '3: :->cmd3' \
                            '*: :->args' \
                            && ret=0


                        case $state in
                        cmd3)
                            _alternative 'args:cmd4:((bash zsh))'
                        ;;
                        args)
                            case $line[3] in
                            bash)

                                # ---- Command: help _complete bash
                                _arguments -s -C \
                                    '1: :->cmd1' \
                                    '2: :->cmd2' \
                                    '3: :->cmd3' \
                                    '*: :->args' \
                                    && ret=0


                            ;;
                            zsh)

                                # ---- Command: help _complete zsh
                                _arguments -s -C \
                                    '1: :->cmd1' \
                                    '2: :->cmd2' \
                                    '3: :->cmd3' \
                                    '*: :->args' \
                                    && ret=0


                            ;;
                            esac

                        ;;
                        esac
                    ;;
                    cook)

                        # ---- Command: help cook
                        _arguments -s -C \
                            '1: :->cmd1' \
                            '2: :->cmd2' \
                            '*: :->args' \
                            && ret=0


                    ;;
                    weather)

                        # ---- Command: help weather
                        _arguments -s -C \
                            '1: :->cmd1' \
                            '2: :->cmd2' \
                            '3: :->cmd3' \
                            '*: :->args' \
                            && ret=0


                        case $state in
                        cmd3)
                            _alternative 'args:cmd4:((cities countries show))'
                        ;;
                        args)
                            case $line[3] in
                            cities)

                                # ---- Command: help weather cities
                                _arguments -s -C \
                                    '1: :->cmd1' \
                                    '2: :->cmd2' \
                                    '3: :->cmd3' \
                                    '*: :->args' \
                                    && ret=0


                            ;;
                            countries)

                                # ---- Command: help weather countries
                                _arguments -s -C \
                                    '1: :->cmd1' \
                                    '2: :->cmd2' \
                                    '3: :->cmd3' \
                                    '*: :->args' \
                                    && ret=0


                            ;;
                            show)

                                # ---- Command: help weather show
                                _arguments -s -C \
                                    '1: :->cmd1' \
                                    '2: :->cmd2' \
                                    '3: :->cmd3' \
                                    '*: :->args' \
                                    && ret=0


                            ;;
                            esac

                        ;;
                        esac
                    ;;
                    esac

                ;;
                esac
            ;;
            weather)

                # ---- Command: weather
                _arguments -s -C \
                    '1: :->cmd1' \
                    '2: :->cmd2' \
                    '*: :->args' \
                    && ret=0


                case $state in
                cmd2)
                    _alternative 'args:cmd3:((cities\:"show list of cities" countries\:"show list of countries" show))'
                ;;
                args)
                    case $line[2] in
                    cities)

                        # ---- Command: weather cities
                        _arguments -s -C \
                            '1: :->cmd1' \
                            '2: :->cmd2' \
                            '*: :->args' \
                            '--country[country name]:country' \
                            && ret=0


                    ;;
                    countries)

                        # ---- Command: weather countries
                        _arguments -s -C \
                            '1: :->cmd1' \
                            '2: :->cmd2' \
                            '*: :->args' \
                            && ret=0


                    ;;
                    show)

                        # ---- Command: weather show
                        _arguments -s -C \
                            '1: :->cmd1' \
                            '2: :->cmd2' \
                        '3: :->country' \
                        '4: :->city' \
                            '*: :->args' \
                            && ret=0

                case $state in
                    country)
                     local __country_completion
                     IFS=$'\n' set -A __country_completion `$program 'weather' 'countries'`
                     compadd -X "country:" $__country_completion

                    ;;
                    city)
                     local __city_completion
                     IFS=$'\n' set -A __city_completion `$program 'weather' 'cities' '--country' "$words[$CURRENT-1]"`
                     compadd -X "city:" $__city_completion

                    ;;
                esac

                    ;;
                    esac

                ;;
                esac
            ;;
            esac

        ;;
        esac

}

